@page "/kind-manager";

@using Services;
@using Data;

<MudPaper Width="100%" Height="100%" class="d-flex flex-column">
    <MudToolBar>
        <MudButton Variant="Variant.Text"
                   StartIcon="@Icons.Material.Filled.Add"
                   Color="Color.Primary"
                   Style="text-transform:none"
                   Class="mt-4"
                   OnClick="OnAddClick">@LD.Add</MudButton>
    </MudToolBar>
    <MudSimpleTable Hover="true" FixedHeader="true" Elevation="0" Style="height: calc(100% - 65px);">
        <thead>
            <tr>
                <th style="width: 90px;">ID</th>
                <th>@LD.Name</th>
                <th style="width: 150px;">@LD.Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var row in kinds)
            {
                <tr>
                    <td>@row.Id</td>
                    <td>@row.Name</td>
                    <td class="ta-r">
                        <MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="() => OnDeleteClick(row.Id)">@LD.Delete</MudButton>
                    </td>
                </tr>
            }
        </tbody>
    </MudSimpleTable>
</MudPaper>


@code {
    [Inject] private IDialogService DialogService { get; set; }

    IList<Kind> kinds = new List<Kind>();

    protected override void OnInitialized()
    {
        kinds = KindService.GetKinds();
    }

    private void UpdateKinds()
    {
        kinds = KindService.GetKinds();
        StateHasChanged();
    }
    private async void OnDeleteClick(int id)
    {
        bool? result = await DialogService.ShowMessageBox(
            LD.Warning,
            LD.SureToDelete,
            yesText: LD.Delete, cancelText: LD.Cancel);
        if (result != null && result == true)
        {
            try
            {
                KindService.DeleteKind(id);
                UpdateKinds();
            }
            catch(Exception ex)
            {
                await DialogService.ShowMessageBox(LD.Error, ex.Message);
            }
        }
    }
    private async void OnAddClick()
    {
        var dialog = await DialogService.ShowAsync<PZPKRecorder.Components.Dialogs.KindDialog>(LD.AddKind);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            UpdateKinds();
        }
    }
}
